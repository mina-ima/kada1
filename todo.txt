ToDoリスト（実行用チェックリスト）

--- Ver1 (完了) ---

[DONE] Day 1：環境構築
•Vite + React + TS + Tailwind 初期化
•ESLint/Prettier 設定
•画面骨組み（Header/Footer/Appレイアウト）

[DONE] Day 2：入力UI
•DateInputField（テキスト＋<input type="date">同期）
•例示テキストの常時表示
•Enterで計算トリガー

[DONE] Day 3：和暦⇔西暦 解析
•eras.ts（S/H/R境界定義）
•parseWareki.ts（S/H/R、元年、/ - . スペース、ゼロ埋め）
•parseGregorian.ts（yyyy/m/d 等と実在日付チェック）

[DONE] Day 4：計算＆検証
•age.ts（基準日デフォルト＝日本時間の今日）
•validate.ts（未来日・対象外・不正日付）
•formatWareki.ts（漢字フル＋元年表記）

[DONE] Day 5：画面結合
•BirthdateForm＋useBirthdateCalcで結合
•ResultCard／ErrorText実装
•スタイル（青系テーマ、余白、影、角丸）

[UNIT TESTS DONE, E2E PENDING] Day 6：テスト
•単体テスト：境界・元年・ゼロ埋め・不正・未来日
•手動E2E：Chrome/Edge/Firefox/Safari

[DONE] Day 7：公開
•Vercel設定・デプロイ
•README作成（使い方・仕様・既知制限）
•タグ v1.0.0

⸻

--- Ver2 (進行中) ---

[DONE] 0. 全体準備
- [DONE] READMEにVer2の機能範囲を追記
- [DONE] 型定義を追加 (RetirementRule, Seniority)

[DONE] 1. Tabs実装（ナビゲーション）
- [DONE] アクセシビリティ対応のTabsコンポーネントを新規作成
- [DONE] アプリのメイン画面にタブUIを統合

[DONE] 2. 機能①：勤続年数
- [DONE] 計算ロジック (seniority.ts) を実装
- [DONE] 単体テストを作成し、バグを修正
- [DONE] 計算フォーム (SeniorityForm.tsx) を実装
- [DONE] カスタムフック (useSeniorityCalc.ts) でUIとロジックを接続

[DONE] 3. 機能②：定年まで
- [DONE] 計算ロジック (retirement.ts) を実装
- [DONE] 単体テストを作成し、タイムゾーン問題を修正
- [DONE] 計算フォーム (RetirementForm.tsx) を実装
- [DONE] カスタムフック (useRetirementCalc.ts) でUIとロジックを接続

[DONE] 4. 機能③：退職所得（簡易）
- [DONE] 計算ロジック (retirementIncome.ts) を実装
- [DONE] 単体テストの作成と実行
- [DONE] 状態連携 (Context API) の実装
- [DONE] UIフォーム (RetirementIncomeForm.tsx) の実装
- [DONE] UIとロジックの接続

[DONE] 5. 結合と仕上げ
- [DONE] UI/UXの微調整
  - [DONE] 「到達済み」表示のトーンを中立色に変更
  - [DONE] タブのレスポンシブ対応（横スクロール）
  - [DONE] 全体のパディング調整
- [DONE] 全機能を通した結合テスト
- [DONE] 回帰テスト（Ver1機能への影響確認）

[IN PROGRESS] 6. ドキュメント・リリース
- [DONE] READMEの更新（v2機能の使い方、詳細仕様）
- [TODO] Vercelへデプロイし、v2.0.0のタグを付与
